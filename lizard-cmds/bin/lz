#!/bin/bash

# Find where the script is and set LIZARD_HOME
# If LIZARD_HOME is empty
if [ -z "$LIZARD_HOME" ]
then
    SCRIPT="$0"
    # Catch common issue: script has been symlinked
    if [ -L "$SCRIPT" ]
    then
	SCRIPT="$(readlink "$0")"
	# If link is relative
	case "$SCRIPT" in
   	    /*) ;; # fine
	    *) SCRIPT=$( dirname "$0" )/$SCRIPT;; # fix
	esac
    fi
    D="$( cd "$( dirname "$SCRIPT")" && pwd )"
    # Strip directories from Lizard home to bin directory.
    D="${D%/bin}"
    D="${D%/lizard-*}"
    LIZARD_HOME="$D"
fi
LZ_CMDS="$LIZARD_HOME/lizard-cmds"

source "$LZ_CMDS/bin/init"

CMD="$(basename $0)"

if [[ ! $PWD =~ $LIZARD_HOME ]]
then
    echo "LIZARD_HOME=$LIZARD_HOME"
fi

usage() {
    echo "Usage: $(basename $0) subcmd" 2>&1
    echo "   Subcommands: 'deploy', 'query', 'servers', 'monitor', 'shard', 'split'" 2>&1
}

if [[ $# = 0 ]]
then
    usage
    exit 1
fi

SUB=$1
shift

case $SUB in
    help)    usage ; exit 0 ;;
    servers) exec "$LZ_CMDS/bin/lz-servers" ;;
    deploy)  CMD="LZ_Deploy" ;; 
    query)   CMD="LZ_Query" ;; 
    monitor) CMD="LZ_Monitor" ;;
    shard)   CMD="LZ_ShardIndex" ;;
    split)   CMD="LZ_SplitDB" ;;
    zk|zookeeper)   CMD="LZ_Zookeeper" ;;
    *)
	echo "Unknown subcommand: $SUB"
	usage
	exit 1
	;;
esac

if [[ -e log4j.properties ]]
then
    LOGGING="-Dlog4j.configuration=file:log4j.properties"
fi

java -cp "$CP" $JVM_ARGS $LOGGING lz.$CMD "$@"
